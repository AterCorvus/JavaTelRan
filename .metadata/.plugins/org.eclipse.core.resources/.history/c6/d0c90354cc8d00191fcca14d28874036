package application;

public class StringMethodsApp {
	
	public static void main(String[] args) {	
		String data = "\n         \t    Vasia  \t       ";
		System.out.println(data.length());
		data = data.trim();
		String str2 = "VasIa";
		System.out.println(myEquals(data, str2));
		System.out.println(reverse(str2));
		System.out.println(toTitle(str2));
		
		String str = "abracadabra";
		System.out.println(str.replace('a', 'e'));
		System.out.println(str.replace("abra", "uhnu"));
		
		String nine = "9";
		String eightyNine = "89";
		System.out.println(nine.compareTo(eightyNine));
		
		System.out.println(getOccuran(str, "abra"));
	}
	
	public static boolean myEquals(String str1, String str2){
		int li = str1.length();
		if (li != str2.length()) return false;
		
		for (int i = 0; i < li; i++) {
			
			if (str1.charAt(i) != str2.charAt(i)) return false;
			
		}
		
		return true;
	}
	
	public static String reverse(String str){
		String result = "";
		int sLen = str.length();
		
		for (int i = 0; i < sLen; i++) result = str.charAt(i) + result;
		return result;
	}
	
	public static String toTitle(String str){
		
		return str.substring(0, 1).toUpperCase() + 
				str.substring(1).toLowerCase();
		
	}
	
	public static int compare(String str1, String str2){
		int stLen1 = str1.length();
		int stLen2 = str2.length();
		
		int stLen = stLen1 > stLen2 ? stLen1 : stLen2;
		
		int diff = 0;
		for (int i = 0; i < stLen; i++) {
			diff = str1.charAt(i) - str2.charAt(i);
			if (diff != 0) return diff;
		}
		
		return stLen1 - stLen2;
	}
	
	public static int countOccuran(String orig, String pattern){
		int counter = 0;
		int from = 0;
		int res = 0;
		while(res>=0) {
			res = orig.indexOf(pattern, from);
			if (res >= 0) {
				counter++;
				from = counter + 1;
			}
			else break;
		}
		return counter;
	}
	
	public static int[] getOccuran(String orig, String pattern){
		int counted = countOccuran(orig, pattern);
		int[] result = new int[counted];
		if (counted == 0) return result;
				
		int counter = 0;
		int from = 0;
		int res = 0;
		while(true) {
			res = orig.indexOf(pattern, from);
			if (res >= 0) {
				result[counter] = res;
				counter++;
				from = counter + 1;
			}
			else break;
		}
		return result;
	}
}